/***********************************************************
In python interpreter, run the following statements:
import keras as ks

tfile=open("ks.txt","w")
tfile.writelines(["\n==============ks==========\n\n"])
tfile.writelines(["%s\n" % item for item in dir(ks)])

tfile.writelines(["\n==============ks.Model==========\n\n"])
tfile.writelines(["%s\n" % item for item in dir(ks.Model)])

tfile.writelines(["\n==============ks.layers==========\n\n"])
tfile.writelines(["%s\n" % item for item in dir(ks.layers)])

tfile.writelines(["\n==============ks.preprocessing==========\n\n"])
tfile.writelines(["%s\n" % item for item in dir(ks.preprocessing)])
......

tfile.close()
************************************************************/

===========dir(keras)=============

Input
Model
Sequential
absolute_import
activations
applications
backend
callbacks
constraints
datasets
engine
initializers
layers
legacy
losses
metrics
models
optimizers
preprocessing
regularizers
utils
wrappers

===========dir(keras.backend)=============

Function
abs
absolute_import
all
any
arange
argmax
argmin
backend
batch_dot
batch_flatten
batch_get_value
batch_normalization
batch_set_value
bias_add
binary_crossentropy
cast
cast_to_floatx
categorical_crossentropy
clear_session
clip
common
concatenate
constant
control_flow_ops
conv1d
conv2d
conv2d_transpose
conv3d
conv3d_transpose
cos
count_params
ctc
ctc_batch_cost
ctc_decode
ctc_label_dense_to_sparse
cumprod
cumsum
defaultdict
depthwise_conv2d
device_lib
division
dot
dropout
dtype
elu
epsilon
equal
eval
exp
expand_dims
eye
flatten
floatx
foldl
foldr
function
functional_ops
gather
get_session
get_uid
get_value
get_variable_shape
gradients
greater
greater_equal
hard_sigmoid
has_arg
identity
image_data_format
image_dim_ordering
in_test_phase
in_top_k
in_train_phase
int_shape
is_keras_tensor
is_placeholder
is_sparse
json
l2_normalize
learning_phase
less
less_equal
local_conv1d
local_conv2d
log
logsumexp
manual_variable_initialization
map_fn
max
maximum
mean
min
minimum
moving_average_update
moving_averages
name_scope
ndim
normalize_batch_in_training
not_equal
np
one_hot
ones
ones_like
os
permute_dimensions
placeholder
pool2d
pool3d
pow
print_function
print_tensor
prod
py_all
py_sum
random_binomial
random_normal
random_normal_variable
random_uniform
random_uniform_variable
relu
repeat
repeat_elements
reset_uids
reshape
resize_images
resize_volumes
reverse
rnn
round
separable_conv1d
separable_conv2d
set_epsilon
set_floatx
set_image_data_format
set_image_dim_ordering
set_learning_phase
set_session
set_value
shape
sigmoid
sign
sin
softmax
softplus
softsign
sparse_categorical_crossentropy
spatial_2d_padding
spatial_3d_padding
sqrt
square
squeeze
stack
std
stop_gradient
sum
switch
sys
tanh
temporal_padding
tensor_array_ops
tensorflow_backend
tf
tf_variables
tile
to_dense
transpose
truncated_normal
update
update_add
update_sub
var
variable
zeros
zeros_like

===========dir(keras.Model)=============

add_loss
add_update
add_weight
assert_input_compatibility
build
built
call
compile
compute_mask
compute_output_shape
count_params
evaluate
evaluate_generator
fit
fit_generator
from_config
get_config
get_input_at
get_input_mask_at
get_input_shape_at
get_layer
get_losses_for
get_output_at
get_output_mask_at
get_output_shape_at
get_updates_for
get_weights
input
input_mask
input_shape
input_spec
load_weights
losses
non_trainable_weights
output
output_mask
output_shape
predict
predict_generator
predict_on_batch
reset_states
run_internal_graph
save
save_weights
set_weights
state_updates
stateful
summary
test_on_batch
to_json
to_yaml
train_on_batch
trainable_weights
updates
uses_learning_phase
weights

===========dir(keras.layers)=============

Activation
ActivityRegularization
Add
AlphaDropout
AtrousConv1D
AtrousConv2D
AtrousConvolution1D
AtrousConvolution2D
Average
AveragePooling1D
AveragePooling2D
AveragePooling3D
AvgPool1D
AvgPool2D
AvgPool3D
BatchNormalization
Bidirectional
Concatenate
Conv1D
Conv2D
Conv2DTranspose
Conv3D
Conv3DTranspose
ConvLSTM2D
ConvRecurrent2D
Convolution1D
Convolution2D
Convolution2DTranspose
Convolution3D
Cropping1D
Cropping2D
Cropping3D
CuDNNGRU
CuDNNLSTM
Deconv2D
Deconv3D
Deconvolution2D
Deconvolution3D
Dense
Dot
Dropout
ELU
Embedding
Flatten
GRU
GRUCell
GaussianDropout
GaussianNoise
GlobalAveragePooling1D
GlobalAveragePooling2D
GlobalAveragePooling3D
GlobalAvgPool1D
GlobalAvgPool2D
GlobalAvgPool3D
GlobalMaxPool1D
GlobalMaxPool2D
GlobalMaxPool3D
GlobalMaxPooling1D
GlobalMaxPooling2D
GlobalMaxPooling3D
Highway
Input
InputLayer
InputSpec
K
LSTM
LSTMCell
Lambda
Layer
LeakyReLU
LocallyConnected1D
LocallyConnected2D
Masking
MaxPool1D
MaxPool2D
MaxPool3D
MaxPooling1D
MaxPooling2D
MaxPooling3D
Maximum
MaxoutDense
Merge
Minimum
Multiply
PReLU
Permute
RNN
Recurrent
RepeatVector
Reshape
SeparableConv1D
SeparableConv2D
SeparableConvolution1D
SeparableConvolution2D
SimpleRNN
SimpleRNNCell
Softmax
SpatialDropout1D
SpatialDropout2D
SpatialDropout3D
StackedRNNCells
Subtract
ThresholdedReLU
TimeDistributed
UpSampling1D
UpSampling2D
UpSampling3D
Wrapper
ZeroPadding1D
ZeroPadding2D
ZeroPadding3D
absolute_import
activations
add
advanced_activations
average
concatenate
constraints
conv_utils
convolutional
convolutional_recurrent
copy
core
cudnn_recurrent
deserialize
deserialize_keras_object
division
dot
embeddings
func_dump
func_load
has_arg
initializers
interfaces
local
maximum
merge
minimum
multiply
namedtuple
noise
normalization
np
pooling
print_function
python_types
recurrent
regularizers
serialize
subtract
warnings
wrappers

===========dir(keras.preprocessing)=============

sequence

===========dir(keras.losses)=============

K
KLD
MAE
MAPE
MSE
MSLE
absolute_import
binary_crossentropy
categorical_crossentropy
categorical_hinge
cosine
cosine_proximity
deserialize
deserialize_keras_object
division
get
hinge
kld
kullback_leibler_divergence
logcosh
mae
mape
mean_absolute_error
mean_absolute_percentage_error
mean_squared_error
mean_squared_logarithmic_error
mse
msle
poisson
print_function
serialize
serialize_keras_object
six
sparse_categorical_crossentropy
squared_hinge

===========dir(keras.metrics)=============

K
MAE
MAPE
MSE
MSLE
absolute_import
binary_accuracy
binary_crossentropy
categorical_accuracy
categorical_crossentropy
cosine
cosine_proximity
deserialize
deserialize_keras_object
division
get
hinge
kullback_leibler_divergence
logcosh
mae
mape
mean_absolute_error
mean_absolute_percentage_error
mean_squared_error
mean_squared_logarithmic_error
mse
msle
poisson
print_function
serialize
six
sparse_categorical_accuracy
sparse_categorical_crossentropy
sparse_top_k_categorical_accuracy
squared_hinge
top_k_categorical_accuracy

===========dir(keras.optimizers)=============

Adadelta
Adagrad
Adam
Adamax
K
Nadam
Optimizer
RMSprop
SGD
TFOptimizer
absolute_import
adadelta
adagrad
adam
adamax
clip_norm
copy
deserialize
deserialize_keras_object
division
get
interfaces
nadam
print_function
rmsprop
serialize
serialize_keras_object
sgd
six
tf
zip

===========dir(keras.layers.Activation)=============

add_loss
add_update
add_weight
assert_input_compatibility
build
built
call
compute_mask
compute_output_shape
count_params
from_config
get_config
get_input_at
get_input_mask_at
get_input_shape_at
get_losses_for
get_output_at
get_output_mask_at
get_output_shape_at
get_updates_for
get_weights
input
input_mask
input_shape
losses
non_trainable_weights
output
output_mask
output_shape
set_weights
trainable_weights
updates
weights

===========dir(keras.callbacks)=============

BaseLogger
CSVLogger
Callback
CallbackList
EarlyStopping
History
Iterable
K
LambdaCallback
LearningRateScheduler
ModelCheckpoint
OrderedDict
Progbar
ProgbarLogger
ReduceLROnPlateau
RemoteMonitor
TensorBoard
TerminateOnNaN
absolute_import
csv
deque
division
json
np
os
print_function
requests
six
time
warnings

===========dir(keras.initializers)=============

Constant
Identity
Initializer
K
Ones
Orthogonal
RandomNormal
RandomUniform
TruncatedNormal
VarianceScaling
Zeros
absolute_import
constant
deserialize
deserialize_keras_object
division
get
glorot_normal
glorot_uniform
he_normal
he_uniform
identity
lecun_normal
lecun_uniform
normal
np
one
ones
orthogonal
print_function
random_normal
random_uniform
serialize
serialize_keras_object
six
truncated_normal
uniform
zero
zeros

===========dir(keras.regularizers)=============

K
L1L2
Regularizer
absolute_import
deserialize
deserialize_keras_object
division
get
l1
l1_l2
l2
print_function
serialize
serialize_keras_object
six

===========dir(keras.utils)=============

CustomObjectScope
GeneratorEnqueuer
HDF5Matrix
OrderedEnqueuer
Progbar
Sequence
absolute_import
conv_utils
convert_all_kernels_in_model
custom_object_scope
data_utils
deserialize_keras_object
generic_utils
get_custom_objects
get_file
io_utils
layer_utils
multi_gpu_model
normalize
np_utils
plot_model
print_summary
serialize_keras_object
to_categorical
training_utils
vis_utils
